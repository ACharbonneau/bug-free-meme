#!/bin/bash -login
 
### define resources needed:
### walltime - how long you expect the job to run
#PBS -l walltime=4:00:00
  
### nodes:ppn - how many nodes & cores per node (ppn) that you require
#PBS -l nodes=1:ppn=1
### mem: amount of memory that the job will need
#PBS -l mem=64gb

#PBS -N notset
if [ "$PBS_JOBNAME" == "notset" ]
then
    echo "please set the job name"
    exit 1
fi

#setnumber=`echo ${PBS_JOBNAME} | sed s/(\d+)*+/\1/`
#echo ${setnumber}
# change to the working directory where your code is located
cd ${PBS_O_WORKDIR}
        
        
### call your executable
module load treemix/1.12
module load Python/2.7.2
module load DendroPy/3.12.0

cp ../../../ProcessRadtags/BT2map/SigSelection/PopSTACKS/batch_20170214.treemix .
tail -n +2 batch_20170214.treemix > batch_20170214.treemix_nohead
gzip batch_20170214.treemix_nohead

#### Not using K flag because SNPs aren't ordered

rm SS_tree.tre SS_tree_Sumtree.tre

treemix -i batch_20170214.treemix_nohead.gz -root GMIL,YEIL_CLNC -o SS_tree -global > SS_tree.log
zcat SS_tree.treeout.gz > SS_tree_org.tre

for i in `seq 1 1000`
	do treemix -i batch_20170214.treemix_nohead.gz -root GMIL,YEIL_CLNC -global -bootstrap -o SS_tree_${i} > SS_tree_${i}.log
	zcat SS_tree_${i}.treeout.gz >> SS_tree.tre
	echo ";" >> SS_tree.tre
done

sumtrees.py --rooted --percentages -t SS_tree_org.tre -o SS_tree_Sumtree.tre SS_tree.tre > SS_tree_Sumtree.log







#treemix -i batch_20170214.treemix_nohead.gz -root GMIL,YEIL_CLNC -o SS_tree_M1 -global -m 1 > SS_tree_M1.log
#
#for i in `seq 1 10`; do treemix -i batch_20170214.treemix_nohead.gz -root GMIL,YEIL_CLNC -bootstrap -o SS_tree_M1_${i} -global -m 1 > SS_tree_M1_${i}.log; done
#
#treemix -i batch_20170214.treemix_nohead.gz -root GMIL,YEIL_CLNC -o SS_tree_M2 -global -m 2 > SS_tree_M2.log
#
#for i in `seq 1 10`; do treemix -i batch_20170214.treemix_nohead.gz -root GMIL,YEIL_CLNC -bootstrap -o SS_tree_M2_${i} -global -m 2 > SS_tree_M2_${i}.log; done
#

